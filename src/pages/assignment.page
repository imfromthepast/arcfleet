<apex:page controller="AssignmentController" showHeader="false" action="{!init}">
    
    <style>
        .AvailableTerritories{
            position: relative; 
            top: 0px;
        }
        .header{
            font-weight: bold; 
            font-size: 12px; 
            padding: 5px;
            //margin-bottom: -10px;
            //position: relative;
            z-index: 1;
            //background-color: rgba(255,255,255,0.5);
            //border-radius: 15px;
            //width: 280px;
        }
        .publisherWrapper{
            float: left;
            width: 100%;
        }
        .dropArea{
            border: 3px dashed #E7E7DE;
            //background-color: rgba(255,255,255,0.5);
            min-height: 50px;
            margin-bottom: 5px;
            //transition: border 0.5s ease-in-out;
            //-moz-transition: border 0.5s ease-in-out; /* Firefox 4 */
            //-webkit-transition: border 0.5s ease-in-out; /* Safari and Chrome */
            //-o-transition: border 0.5s ease-in-out; /* Opera */
        }
        .dropAreaHover{
            background-color: #f4f4f4;
            border: 3px dashed black;
            //width: 100px;
            min-height: 200px;
            border-radius: 15px;
        }
        .dropArea:hover{
            //background-color: #f4f4f4;
            background-color: rgba(255,255,255,0.5);
            border: 3px dashed black;
            //width: 100px;
            //height: 200px;
            border-radius: 15px;
            margin-bottom: 5px;
        }
        .ui-draggable-dragging{
            z-index: 200;
        }
    </style>
    <apex:composition template="territorytemplate">
        <apex:define name="docreadyscript">
            makeDraggable();
        </apex:define>
        <apex:define name="functions">
            function makeDraggable(){
                $j(".territory").draggable({
                    revert: 'invalid',
                    scroll: true
                });
                //$j(".territory").addTouch();
                $j(".dropArea").droppable({
                    hoverClass: "dropAreaHover",
                    drop: function(event, ui){
                        updateTerritory(ui.draggable.attr('data-terrId'),ui.draggable.attr('data-terrName'),ui.draggable.attr('data-terrAssId'),$j(this).attr('data-pubId'));
                    }
                });
                var $scrollingDiv = $j('.AvailableTerritories');
                $j('.touchscrollable').scroll(function(){
                    $scrollingDiv.stop().animate({"marginTop": ($j('.touchscrollable').scrollTop()) + "px"},'slow', 'swing' );
                });
            }
        </apex:define>
        <apex:define name="toolbartitle">
            Territory Assignments
        </apex:define>
        <apex:define name="toolbarleft">
            <a onclick="goto('../{!id}');" class="button back black" style="text-decoration: none; cursor: pointer;" target="_TOP">
                <span></span>
                {!if(ismobile,left(congregation.name,10),congregation.name)}
            </a>
        </apex:define>
        <apex:define name="setup">
            <a class="button black" onclick="window.open('../apex/territoryassignmentrecord?id={!congregation.id}','{!congregation.name} Territory Assignment Record','location=no','fullscreen=yes','menubar=no');"><span></span>
                Territory Assignments PDF
            </a>
        </apex:define>
        <apex:define name="fields">
            <apex:form >
                <apex:pageBlock >
                    <apex:pageBlockSection columns="1">
                        <apex:inputField value="{!publisher.First_Name__c}"/>
                        <apex:inputField value="{!publisher.Last_Name__c}"/>
                        <apex:inputField value="{!publisher.Email__c}"/>
                        <apex:inputField value="{!publisher.Phone__c}"/>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                <apex:commandButton action="{!addPublisher}" value="Add Publisher"/>
            </apex:form>
        </apex:define>
    <apex:define name="content">
    <apex:form >
    <apex:actionFunction name="updateTerritory" action="{!updateTerritory}" rerender="allPublishers" oncomplete="makeDraggable(); updateOrientation();">
        <apex:param name="territoryId" value=""/>
        <apex:param name="territoryName" value=""/>
        <apex:param name="terrAssId" value=""/>
        <apex:param name="publisherId" value=""/>
    </apex:actionFunction>
    </apex:form>
    <apex:outputpanel layout="block" id="allPublishers">
        <apex:messages />
        <table>
        <tr>
        <td style="vertical-align: top;" class="publisherlist">
            <div>
                <apex:repeat value="{!publishers}" var="p">
                    <div class="publisherWrapper">
                        <div class="dropArea" data-pubId="{!p.id}" >
                            <div class="header">{!p.name}</div>
                            <apex:repeat value="{!p.territory_assignments__r}" var="t">
                                <div class="territory plotted css3-button {!if(ismobile,'mobile','')}" data-terrId="{!t.Territory__c}" data-terrAssId="{!t.id}" data-terrName="{!t.territory__r.name}">
                                    <div>
                                        <span></span>{!t.territory__r.name}
                                    </div>
                                </div>
                            </apex:repeat>
                        </div>
                    </div><hr/>
                </apex:repeat>
            </div>
        </td>
        
        <td style="vertical-align: top; border-left: 1px solid black; height: 100%;" class="territorylist">
            <div>
                <div class="dropArea AvailableTerritories" data-pubId="0" style="height: 90%;">
                    <div class="header">Available Territories</div>
                    <apex:repeat value="{!UnassignedTerritories}" var="t">
                        <div class="territory plotted css3-button {!if(ismobile,'mobile','')}" data-terrId="{!t.Territory__c}" data-terrAssId="{!t.id}" data-terrName="{!t.name}" >
                            <div>
                                <span></span>{!t.name}
                            </div>
                        </div>
                    </apex:repeat>
                </div>
            </div>
        </td>
        </tr></table>
        
  
    </apex:outputpanel>
    </apex:define>
    </apex:composition>
    
</apex:page>