<apex:page controller="assignmentsController" showHeader="false" action="{!init}">
    
    <style>
        .publisherWrapper{
            padding: 10px 5px 10px 5px;
            border-bottom: 1px solid;
            border-color: #e7e7e7;
        }
    </style>
    <apex:composition template="territorytemplate">
        <apex:define name="javascript">
            <script>
                mapBounds = new google.maps.LatLngBounds();
                function geocode(){
                    geocoder = new google.maps.Geocoder();
                    address = "{!kingdomhall.Address__c}";
                    geocoder.geocode( {address:address}, function(results, status) {
                        if (status == google.maps.GeocoderStatus.OK && results.length){
                            if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                map.setCenter(results[0].geometry.location);
                                kingdomHall.setPosition(results[0].geometry.location);
                                kingdomHall.setMap(map);
                            }
                        } else {
                            $j('#map').css({'height' : '150px'});
                            $j('#map').html("Oops! {!congregation.Name}'s Kingdom Hall address could not be found, please make sure the address is correct.");
                        }
                        
                        color = "#FF0000";
                        var territorystring = $j("[id$='territories']").val();
                        var splitTerritoryArray = territorystring.split('|');
                        var territories = new Array();
                        for (var i =0; i < splitTerritoryArray.length; i++) {
                            var n = splitTerritoryArray[i].split('/');
                            plotAssignmentTerritory(n[0], n[1]);
                        }                        
                        map.setCenter(mapBounds.getCenter());
                        map.fitBounds(mapBounds);
                        
                    });
                }
                function plotAssignmentTerritory(name, coords){
                    var territory;
                    var territoryCoords = new Array();
                    var coordsArray = coords.split(';');
                    for (var i =0; i < coordsArray.length; i++) {
                        var coordArray = coordsArray[i].split(',');
                        territoryCoords.push(new google.maps.LatLng(coordArray[0],coordArray[1]));
                    }
                    var territoryname = name.split('-')[0];
                    var tid = territoryname.split(':')[1];
                    territoryname = territoryname.split(':')[0];

                    var coveredandcheckedout = name.split('-')[1];
                    var checkedoutbythispublisher = coveredandcheckedout.split(':')[0];
                    var checkedout = coveredandcheckedout.split(':')[1];
                    
                    if(checkedoutbythispublisher == 'true'){
                        color='blue';
                    }else{
                        if(checkedout == 'true'){
                            color = 'blue';
                        }else{
                            color='red';
                        }
                    }
                    
                    territory = new google.maps.Polygon({
                        paths: territoryCoords,
                        strokeColor: color,
                        strokeOpacity: 0.5,
                        strokeWeight: 3,
                        fillColor: color,
                        fillOpacity: 0.1,
                        editable: false
                    });
                    if(checkedout == 'false'||checkedoutbythispublisher == 'true')
                    territory.setMap(map);
                    google.maps.event.addListener(territory, 'click', function() {
                        //Territory Click Function
                        if(checkedoutbythispublisher == 'true'){
                            checkin(tid);
                            alert('Territory #' + territoryname + ' turned back in. Thank you!');
                        }else{
                            checkout(tid,territoryname);
                            alert('Territory #' + territoryname + ' checked out to {!PublisherName}. Thank you!');
                        }
                    });
                    var terrbounds = new google.maps.LatLngBounds();
                    for (i = 0; i < territoryCoords.length; i++) {
                        mapBounds.extend(territoryCoords[i]);
                        terrbounds.extend(territoryCoords[i]);
                    }
                    var terrmarker = new google.maps.Marker({
                        position: terrbounds.getCenter(),
                        title: ""+territoryname,
                        icon: 'https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld='+territoryname+'|FFff00|000000'
                    });
                    if(checkedout == 'false'||checkedoutbythispublisher == 'true')
                    terrmarker.setMap(map);
                }
            
            </script>
        </apex:define>
        <apex:define name="toolbartitle">
            {!PublisherName}
        </apex:define>
        <apex:define name="toolbarleft">
            <a onclick="goto('../{!id}');" class="button back black" style="text-decoration: none; cursor: pointer;" target="_TOP">
                <span></span>
                {!if(ismobile,left(congregation.name,10),congregation.name)}
            </a>
        </apex:define>
        <apex:define name="docreadyscript">
            showFields('{!pid}');
            
        </apex:define>
        <apex:define name="functions">
            
            function showFields(p){
                if(p == 'none'){
                    $j("[id$='fields']").show();
                }else{
                    $j("[id$='fields']").hide();
                }
            }
        </apex:define>
        <apex:define name="toolbarright">
            <a class="button black" onclick="newpublisher();" style="text-decoration: none; cursor: pointer;">
                <span></span>
                <img src="https://repono.com/wp-content/themes/repono_ver1-1/images/repono-plus-sign-white.gif" width="12px"/>
            </a>
        </apex:define>
        <apex:define name="setup">
            <a class="button black" onclick="window.open('../apex/territoryassignmentrecord?id={!congregation.id}','{!congregation.name} Territory Assignment Record','location=no','fullscreen=yes','menubar=no');"><span></span>
                Territory Assignments PDF
            </a>
        </apex:define>
        <apex:define name="fields">
            <apex:form id="theform">
                <apex:actionFunction action="{!newpublisher}" name="newpublisher" immediate="true"/>
                <apex:inputhidden id="territories" value="{!territoriesCoords}"/>
                <apex:pageBlock >
                    <apex:pageBlockSection columns="1">
                        <apex:inputField value="{!publisher.First_Name__c}"/>
                        <apex:inputField value="{!publisher.Last_Name__c}"/>
                        <apex:inputField value="{!publisher.Email__c}"/>
                        <apex:inputField value="{!publisher.Phone__c}"/>
                    </apex:pageBlockSection>
                </apex:pageBlock>
                <apex:commandButton action="{!savePublisher}" value="Save"/>
                <hr/>
                <div style="overflow-y:scroll; -webkit-overflow-scrolling: touch;  height: 180px; padding: 0px;">
                    <apex:repeat value="{!publishers}" var="p">
                        <div class="publisherWrapper" onclick="goto('../apex/assignments?id={!id}&pid={!p.id}');">{!p.name}</div>
                    </apex:repeat>
                </div>
            </apex:form>
        </apex:define>
        <apex:define name="content">
            <apex:form >
                <apex:actionFunction action="{!checkout}" name="checkout" rerender="map_edit">
                    <apex:param name="territoryId" value=""/>
                    <apex:param name="territoryName" value=""/>
                </apex:actionfunction>
                <apex:actionFunction action="{!checkin}" name="checkin" rerender="map_edit">
                    <apex:param name="territoryId" value=""/>
                </apex:actionfunction>
            </apex:form>
            <div id="map_edit"></div>
        </apex:define>
    </apex:composition>
</apex:page>