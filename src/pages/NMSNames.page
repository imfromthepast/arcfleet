<apex:page showHeader="false" standardStylesheets="false" title="No Man's Sky Animal Name Generator">
	<head>
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"/> 
		<!-- AngularJS CDN -->
      	<script src="{!URLFOR($Resource.ARCFleetResources,'js/angular.min.js')}" type="text/javascript"/>
      	<!-- jQuery -->
	    <script src="{!URLFOR($Resource.ARCFleetResources, 'js/jquery-2.1.1.min.js')}"/>
	    <!-- Bootstrap -->
	    <link href="{!URLFOR($Resource.ARCFleetResources,'bootstrap/css/bootstrap.min.css')}" rel="stylesheet" type="text/css"/>
	    <!-- Bootstrap JS -->
	    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
	    <!-- is.js -->
	    <script src="{! $Resource.ISJS}"/>
       <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
          <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
          <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
        <![endif]-->
        <!-- Fonts -->
      	<link href="{!URLFOR($Resource.ARCFleetResources, 'fonts/ionicons/css/ionicons.min.css')}" rel="stylesheet" type="text/css"/>
      	<link href="{!URLFOR($Resource.ARCFleetResources, 'fonts/font_awesome/css/font-awesome.min.css')}" rel="stylesheet" type="text/css"/>
      	<link href="{!URLFOR($Resource.ARCFleetResources, 'fonts/arcfleet/style.css')}" rel="stylesheet" type="text/css"/>
     	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.23/angular-sanitize.js"></script>    
    </head>
	<script>
		var pLight = [
			'glowing','fluorescent','translucent',''
		]
		var pColor = [
			'red','blue','yellow','green','orange','purple','brown','black','white','sandy',
			'silver','gold','golden','dark','bright','rainbow','multicolored',
			''
		];
		var pNumber = [
			'one','two','three','four','five','six','seven','eight','many','no','thousand',
			'nine','ten','twenty','fifty','hundred','double','quad','single','triple',
			''
		];
		var pDescription = [
			'bumpy','smooth','spotty','messy','scaly','limp','stiff',
			'round','flat','glossy','shiny','frosty','scary','tough','hard',
			'soft','spiky','spike','rib','ridge','pointy','arch','segment',
			'segment','dark','bright','empty','split','forked','reverse','inverse','fluffy','dirty','moist',
			'wet','clammy','sandy','icy','water','wispy','gassy','sappy','muddy','star',
			'woody','bloody','pale','sharp','dry','cold','dark','crusty','knobby','arrow',
			'dagger','ray','joint','mucus','fire','bloated','inflated','cloven','cleaved','furry',
			''
		];
		var pBodyPart = [
			'face','eye','foot','paw','claw','talon','scale','eyestalk','wing',
			'back','belly','knee','knuckle','antennea','nostril','thigh',
			'lip','fur','skin','thorax','tentacle',
			''
		];
		var pBodyParted = [
			'dragging','lacking','flailing','bearing','flaring','rearing','gripping','hugging',
			''
		]
		var pSize = [
			'long','short','tiny','small','medium','large','big','fat','skinny','thin',
			''			
		];
		var pTitle = [
			'emperor','greater','king','lesser','killer','alpha','apex','wild','tame','baby',
			'deaf','blind','mute','sightless',
			''
		];
		var pFood = [
			'salt','grass','leaf','tree','rock','sand','meat','bone','shell','chiton','blade',
			'stick','snow','ice','ash','fire','larva','face','nose','knee','grain','flower','fruit',
			'seed','fish','bird',
			''
		];
		var pLiquid = [
			'pool','sea','blood','tear','sweat','nectar','sap','ocean','water','snow',
			''
		];
		var pEater = [
			'eater','muncher','cruncher','chewer','gulper','biter',
			''
		];
		var pDrinker = [
			'sucker','slurper','siphon','licker','gulper',
			''
		];
		var pDirection = [
			'top','dorsal','ventral','rear','posterior','anterior','bottom','front','back',
			''
		];
		var pDirectioned = [
			'breasted','bellied','headed','footed','spotted','striped','horned','legged','eared','toed','faced',
			'kneed','elbowed','handed','eyed','toothed','winged','necked','nosed','eyed','eared','nosed','mouthed',
			'toothed','faced','headed','necked','shouldered','shouldered','armed','armed','handed','footed','feathered',
			'finned','finned','haired','tailed','tailed','masked','tongued','billed','beaked','tipped',
			'plated','spiked','pawed','bearded','wristed','shelled','fingered','tentacled','tusked','trunked','whiskered',
			'gilled','sphinctered','hearted','valved','crested','tufted','thoraxed','skinned','lipped','speckled','striped',
			'blooded',
			''
		];
		var pColored = [
			'breasted','bellied','backed','headed','footed','spotted','striped','horned','legged','eared','toed','faced',
			'kneed','elbowed','handed','eyed','toothed','winged','necked','nosed','eyed','eared','nosed','mouthed',
			'toothed','faced','headed','necked','shouldered','shouldered','armed','armed','handed','footed','feathered',
			'finned','finned','haired','tailed','tailed','masked','bottomed','topped','tongued','billed','beaked','tipped',
			'plated','spiked','pawed','bearded','wristed','shelled','fingered','tentacled','tusked','trunked','whiskered',
			'gilled','sphinctered','hearted','valved','crested','tufted','thoraxed','skinned','lipped','speckled','striped',
			'blooded','flared',
			''
		];
		var pNumbered = [
			'spotted','striped','horned','legged','eared','toed','faced','kneed',
			'elbowed','handed','eyed','toothed','winged','necked','nosed','eyed','eared','nosed','mouthed','toothed',
			'faced','headed','necked','shouldered','shouldered','armed','armed','handed','footed','feathered','finned',
			'finned','haired','tailed','tailed','bottomed','tongued','billed','beaked','tipped','plated','spiked',
			'pawed','wristed','shelled','fingered','tentacled','tusked','trunked','whiskered','gilled','sphinctered',
			'hearted','valved','jointed','thoraxed','skinned','lipped','lunged','celled',
			''
		];
		var pDescriptioned = [
			'horned','legged','eared','toed','faced','kneed',
			'elbowed','handed','eyed','toothed','winged','necked','nosed','eyed','eared','nosed','mouthed','toothed',
			'faced','headed','necked','shouldered','shouldered','armed','armed','handed','footed','feathered','finned',
			'finned','haired','tailed','tailed','masked','bottomed','topped','tongued','billed','beaked','tipped','plated',
			'spiked','pawed','bearded','wrist','shelled','fingered','tentacled','tusked','trunked','whiskered','gilled',
			'sphinctered','hearted','valved','covered','thoraxed','skinned','lipped','lunged',
			''
		];
		var pSized = [
			'breasted','bellied','backed','headed','footed','spotted','striped','horned','legged','eared','toed',
			'faced','kneed','elbowed','handed','eyed','toothed','winged','necked','nosed','eyed','eared','nosed',
			'mouthed','toothed','faced','headed','necked','shouldered','shouldered','armed','armed','handed','footed',
			'feathered','finned','finned','haired','tailed','tailed','masked','bottomed','topped','tongued','billed',
			'beaked','tipped','plated','spiked','pawed','bearded','wristed','shelled','fingered','tentacled','tusked',
			'trunked','whiskered','gilled','sphinctered','hearted','valved','jointed','thoraxed','skinned',
			'lipped','lunged',
			''
		];
		var word1 = [
			'fluff','dirt','sky','bladder','horn','tree','wet','clumsy','velvet','grinning','sand','grass','plains','ice','sea',
			'hill','mountain','ocean','cloud','gas','sap','seed','mud','pond','branch','wing','claw','stick','desert','savannah','blood',
			'hole','bush','snow','mask','prairie','hexa','hammer','shrub','night','moon','sun','star','space','flightless','flying','brutish',
			'wood','honey','nectar','limping','slithering','bearded','blind','lazy','slow','fast','speedy','leaf','mega','clay','rock','stone',
			'needle','moody','angry','dagger','wild','lava','fire','larva','nerf',
			''
		];
		var word2 = [
			'slidder','hugger','hopper','back','licker','humper','biter','lover','digger','sucker','pike','toad','horn','sprinter',
			'worm','eel','snake','whale','fish','ape','beast','cat','goat','beaver','glider','hoarder','lurker','rider','swimmer','eater',
			'runner','duck','muncher','trapper','spinner','bag','bagger','bird','cow','bobby','dog','crab','urchin','pod','sapien','climber',
			'nester','weaver','chuck','pecker','badger','jumper','flyer','floater','skater','roller','flapper','limper','puffin','penguin',
			'seal','dolphin','mole','bull','monster','kraken','killer','brute','creature','critter','pig','varmint','dart','darter','skewer',
			'snail','horn','head','tweeter','murphy','dragon','herder',
			''
		];
		var prefix = [
			'fluff','dirt','sky','bladder','horn','tree','wet','clumsy','velvet','grin','sand','grass','plains','ice','sea',
			'hill','mountain','ocean','cloud','gas','sap','seed','mud','pond','branch','wing','claw','stick','desert','savannah','blood',
			'hole','bush','snow','mask','prairie','hexa','hammer','shrub','night','moon','sun','star','space','flightless','fly','brute',
			'wood','honey','nectar','limp','slither','beard','blind','lazy','slow','fast','speed','leaf','mega','clay','rock','stone',
			'needle','moody','dagger','fire','lava','jack','sean','boople',
			''
		];
		var suffix = [
			'slidder','hugger','hopper','back','licker','humper','biter','lover','digger','sucker','pike','toad','horn','sprinter',
			'worm','fish','ape','beast','cat','glider','hoarder','lurker','rider','swimmer','eater','bottom',
			'runner','muncher','trapper','spinner','bag','bagger','bird','bobby','pod','sapien','climber',
			'nester','weaver','chuck','pecker','badger','jumper','flyer','floater','skater','roller','flapper','limper',
			'mole','bull','killer','brute','pig','dart','darter','skewer','wrist','snail','horn','head','tit','tweet','alope',
			'elop','murphy','dragon','floof','snoot','herder','bug','beetle','spider','thumper','jumper',
			''
		];
		var p5 = [
/* 0  */	[pColor,'-',pColored,' ',word1,'-',word2],
/* 1  */	[pColor,'-',pColored,' ',prefix,suffix],
/* 2  */	[pColor,pColored,' ',word1,'-',word2],
/* 3  */	[pColor,pColored,' ',prefix,suffix],
/* 4  */	[pColor,' ',prefix,suffix],
/* 5  */	[pColor,' ',word1,'-',word2],

/* 6  */	[pNumber,'-',pNumbered,' ',word1,'-',word2],
/* 7  */	[pNumber,'-',pNumbered,' ',prefix,suffix],

/* 8  */	[pBodyPart,'-',pBodyParted,' ',word1,'-',word2],
/* 9  */	[pBodyPart,'-',pBodyParted,' ',prefix,suffix],

/* 10 */	[pDescription,'-',pDescriptioned,' ',word1,'-',word2],
/* 11  */	[pDescription,'-',pDescriptioned,' ',prefix,suffix],
/* 12  */	[pDescription,pDescriptioned,' ',word1,'-',word2],
/* 13  */	[pDescription,pDescriptioned,' ',prefix,suffix],

/* 14  */	[pSize,pSized,' ',word1,'-',word2],
/* 15  */	[pSize,pSized,' ',prefix,suffix],
/* 16  */	[pSize,' ',pSized,' ',word2],

/* 17  */	[pTitle,' ',word1,'-',word2],
/* 18  */	[pTitle,' ',prefix,suffix],
/* 19  */	[pTitle,' ',word2],
/* 20  */	[pTitle,' ',word1,' ',word2],

/* 21 */	[pColor,'-',pColored,' ',pFood,pEater],
/* 22 */	[pColor,'-',pColored,' ',pLiquid,pDrinker],

/* 23 */	[pNumber,'-',pNumbered,' ',pFood,pEater],
/* 24 */	[pNumber,'-',pNumbered,' ',pLiquid,pDrinker],
			
/* 25 */	[pDescription,'-',pDescriptioned,' ',pFood,pEater],
/* 26 */	[pDescription,'-',pDescriptioned,' ',pLiquid,pDrinker],

/* 27 */	[pSize,'-',pSized,' ',pFood,pEater],
/* 28 */	[pSize,'-',pSized,' ',pLiquid,pDrinker],

/* 29 */	[pSize,' ',pBodyPart,'less ',pLiquid,pDrinker],
/* 30 */	[pSize,' ',pBodyPart,'less ',pFood,pEater],

/* 31 */	[pDirection,'-',pDirectioned,' ',pFood,pEater],
/* 32 */	[pDirection,'-',pDirectioned,' ',pLiquid,pDrinker],
/* 33 */	[pDirection,'-',pDirectioned,' ',word1,'-',word2],
/* 34 */	[pDirection,'-',pDirectioned,' ',prefix,suffix],

/* 35 */	[pLight,' ',pColored,' ',word1,'-',word2],
/* 36 */	[pLight,' ',pColored,' ',prefix,suffix],
/* 37 */	[pLight,' ',prefix,suffix],
/* 38 */	[pLight,' ',word1,'-',word2],
/* 39 */	[pLight,' ',pColored,' ',pFood,pEater],
/* 40 */	[pLight,' ',pColored,' ',pLiquid,pDrinker],
/* 41 */	[pLight,' ',pColor,' ',word1,'-',word2],
/* 42 */	[pLight,' ',pColor,' ',prefix,suffix],
/* 43 */	[pLight,' ',pColor,' ',pFood,pEater],
/* 44 */	[pLight,' ',pColor,' ',pLiquid,pDrinker],

			[pColor,'-',pColored,' ',word1,'-',word2]
		];
		var r5=0;

        $j = jQuery.noConflict();
        $j(document).ready(function() {
			setup();
		});	
		function setup(){
			generate(true,false);
		}
		function generate(useURL,moreLikeThis){
			var ran = [0,43,17,0,0];
			if(useURL){
				if(is.not.null(getParameterByName('p1'))) ran[0] = parseInt(getParameterByName('p1'));
				if(is.not.null(getParameterByName('p2'))) ran[1] = parseInt(getParameterByName('p2'));
				if(is.not.null(getParameterByName('p3'))) ran[2] = parseInt(getParameterByName('p3'));
				if(is.not.null(getParameterByName('p4'))) ran[3] = parseInt(getParameterByName('p4'));
				if(is.not.null(getParameterByName('p5'))){
					ran[4] = parseInt(getParameterByName('p5'));					
				}else{
					ran[4] = 20;
				}
			}else{
				if(moreLikeThis){
					ran[4] = r5;
				}else{
					ran[4] = randomArrayElem(p5);
				}				
			}
			var name = '';
			var ranint = 0;
			for (var i = 0; i < p5[ran[4]].length; i++) {
				var parr = p5[ran[4]][i];
				var rando = randomArrayElem(parr);
				if(is.array(parr)){
					var namePart = '';
					if(useURL){
						if(is.undefined(parr[ran[ranint]])){
							namePart = parr[0];
						}else{
							namePart = parr[ran[ranint]];
						}
					}else{
						if(is.undefined(parr[rando])){
							namePart = parr[0];
						}else{
							namePart = parr[rando];
						}
						ran[ranint] = rando;
					}
					ranint++;
					if(i>0){
						if(is.string(p5[ran[4]][i-1])){
							// if previous part is a string, then capitalize this part
							namePart = cap(namePart);
						}
					}else{
						namePart = cap(namePart);
					}
					name = name + namePart;
				}else if(is.string(parr)){
					name = name + parr;
				}
			}
			r5 = ran[4];
			console.log(ran[0]+','+ran[1]+','+ran[2]+','+ran[3]+','+ran[4]);
			console.log(name);
            $j('#name').html(name);
            document.title = name;
            var baseUrl = window.location.toString();
            if(baseUrl.indexOf('?')>-1) baseUrl = baseUrl.substring(0,baseUrl.indexOf('?'));
            console.log(baseUrl);
            var fullUrl = baseUrl+'?p1='+ran[0]+'&p2='+ran[1]+'&p3='+ran[2]+'&p4='+ran[3]+'&p5='+ran[4];
            $j('#permaLink').attr({'href':fullUrl});
			$j('#twitterLink').attr({'href':'https://twitter.com/share?url='+baseUrl+'%3Fp1='+ran[0]+'%26p2='+ran[1]+'%26p3='+ran[2]+'%26p4='+ran[3]+'%26p5='+ran[4]});
			$j('#facebookLink').attr({'href':'http://www.facebook.com/sharer.php?u='+baseUrl+'%3Fp1='+ran[0]+'%26p2='+ran[1]+'%26p3='+ran[2]+'%26p4='+ran[3]+'%26p5='+ran[4]});
			$j('#googlePlusLink').attr({'href':'https://plus.google.com/share?url='+baseUrl+'%3Fp1='+ran[0]+'%26p2='+ran[1]+'%26p3='+ran[2]+'%26p4='+ran[3]+'%26p5='+ran[4]});
			$j('#redditLink').attr({'href':'http://reddit.com/submit?url='+baseUrl+'%3Fp1='+ran[0]+'%26p2='+ran[1]+'%26p3='+ran[2]+'%26p4='+ran[3]+'%26p5='+ran[4]});
		}
		function cap(string){
			if(is.not.undefined(string)){
				return string.charAt(0).toUpperCase() + string.slice(1);
			}else{
				return string;
			}
		}
		function randomArrayElem(arr){
			var randomNumber = Math.random();
			return Math.floor(randomNumber*(arr.length-1));
		}		
		function getParameterByName(name, url) {
		    if (!url) url = window.location.href;
		    url = url.toLowerCase(); // This is just to avoid case sensitiveness  
		    name = name.replace(/[\[\]]/g, "\\$&").toLowerCase();// This is just to avoid case sensitiveness for query parameter name
		    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
		        results = regex.exec(url);
		    if (!results) return null;
		    if (!results[2]) return '';
		    return decodeURIComponent(results[2].replace(/\+/g, " "));
		}
	</script>
	<style>
        @font-face {
            font-family: nms-font;
            src: url('{!$Resource.NMSFont}');
        }
		#name-wrapper{
			font-family: nms-font;
			padding: 10px;
			background: rgba(0,0,0,0.35);
			margin-bottom: 10px;
			color: #fff;
		}
		h1,h2,h3,body{
			font-family: nms-font;
		}
		h1{
			font-size: 50px;
		}
		.share-button{
			color: #fff;
		    width: 30px;
		    height: 30px;
		    border-radius: 50%;
		    padding: 8px;
			display: inline;
			margin: 10px;
		}
		body{
			background: url('{!$Resource.NMS_BG}') fixed;
			color: #fff;
		    background-size: cover;
		    background-position-x: 70%;
		}
	</style>
	<body>
		<div class="container">
			<div class="row">
				<div class="col-xs-12">
					<h1>No Man's Sky</h1>
					<h4>Random Animal Name Generator</h4>
					<div id="name-wrapper">
					<h1 id="name" class="text-center"></h1>
					<div id="share-buttons" class="text-right">
							<a id="permaLink" class="share-button" target="_blank"><i class="glyphicon glyphicon-link"/></a>
							<a id="twitterLink" class="share-button" href="" target="_blank"><i class="fa fa-twitter"></i></a>					    
						    <a id="facebookLink" class="share-button" href="" target="_blank"><i class="fa fa-facebook"></i></a>					    
						    <a id="googlePlusLink" class="share-button" href="" target="_blank"><i class="fa fa-google-plus"></i></a>
						    <a id="redditLink" class="share-button" href="" target="_blank"><i class="fa fa-reddit"></i></a>
					    </div>
					    </div>
					<div class="col-xs-12">
						<div class="pull-left">
							<div onclick="generate(false,false)" class="btn btn-default btn-sm">
								Random
							</div>
							<div onclick="generate(false,true)" class="btn btn-default btn-sm">
								More Like This
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</body>
</apex:page>